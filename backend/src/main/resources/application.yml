server:
  port: 8080

spring:
  application:
    name: geulpi-calendar-backend
    
  graphql:
    graphiql:
      enabled: true
    path: /graphql
    schema:
      locations: classpath:graphql/
      file-extensions: .graphqls
    # Performance optimizations
    websocket:
      path: /graphql-ws
    query:
      max-complexity: 1000
      max-depth: 15
    execution:
      async: true
    servlet:
      max-request-size: 10MB
      
  datasource:
    url: jdbc:postgresql://localhost:5432/geulpi_db
    username: geulpi_user
    password: testpassword123
    driver-class-name: org.postgresql.Driver
    # HikariCP connection pool optimization
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000
      validation-timeout: 5000
      leak-detection-threshold: 60000
      pool-name: GeulpiHikariPool
    
  jpa:
    hibernate:
      ddl-auto: create-drop
      jdbc:
        batch_size: 25
        batch_versioned_data: true
        order_inserts: true
        order_updates: true
      connection:
        handling_mode: delayed_acquisition_and_release_after_transaction
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        # Query optimization
        query:
          plan_cache_max_size: 2048
          plan_parameter_metadata_max_size: 128
        # Second-level cache
        cache:
          use_second_level_cache: false
          use_query_cache: false
          # region:
          #   factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
        # Statistics for monitoring
        generate_statistics: true
        session:
          events:
            log:
              LOG_QUERIES_SLOWER_THAN_MS: 100
    show-sql: false # Disable in production for performance
    
  liquibase:
    enabled: false
    change-log: classpath:db/changelog/db.changelog-master.xml
    
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      # Lettuce connection pool optimization
      lettuce:
        pool:
          max-active: 50
          max-idle: 20
          min-idle: 5
          max-wait: 2000ms
          time-between-eviction-runs: 30000ms
        shutdown-timeout: 100ms
        cluster:
          refresh:
            adaptive: true
            period: 30000ms
  cache:
    type: redis
    redis:
      time-to-live: 30m # default TTL
      cache-null-values: false
      
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: geulpi-backend
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.geulpi.calendar.dto"
        
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
              - https://www.googleapis.com/auth/calendar
              
jwt:
  secret: ${JWT_SECRET:your-secret-key-here-change-in-production}
  expiration: 86400000 # 24 hours
  
google:
  api:
    key: ${GOOGLE_API_KEY}
    
openai:
  api:
    key: ${OPENAI_API_KEY}
    
kafka:
  topics:
    ml-requests: ml-requests
    ml-responses: ml-responses
    
app:
  oauth2:
    redirectUri: http://localhost:3000/auth/callback
  cors:
    allowed-origins: ${ALLOWED_ORIGINS:http://localhost:3000}
  security:
    max-login-attempts: 5
    lockout-duration: 15 # minutes
    jwt:
      access-token-validity: 24 # hours
      refresh-token-validity: 168 # hours (7 days)
    
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always